name: Haber Botu Sayfasını Oluştur ve Yayınla

on:
  schedule:
    # Betiği her 30 dakikada bir çalıştırır
    - cron: '*/30 * * * *'
  push:
    branches:
      - main
  workflow_dispatch:

# İzinleri ayarla: Sayfayı oluşturmak ve dağıtmak için
permissions:
  contents: read
  pages: write
  id-token: write

# Aynı anda sadece bir dağıtıma izin ver
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Önce build (inşa) adımı
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Depoyu Kopyala 🛎️
        uses: actions/checkout@v4

      - name: Python 3.12 Kurulumu 🐍
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip' # Pip önbelleğini etkinleştir

      - name: Bağımlılıkları Yükle ⚙️
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Selenium ve Chrome için gerekli sistem paketleri (Ubuntu için)
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable chromium-chromedriver libglib2.0-0 libnss3 libfontconfig1

      - name: GitHub Secrets'tan .env Dosyası Oluştur 🤫
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" > .env
          echo "GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}" > .env
          echo "API_SECRET=${{ secrets.API_SECRET }}" >> .env
          echo "ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }}" >> .env
          echo "ACCESS_SECRET=${{ secrets.ACCESS_SECRET }}" >> .env
          echo "BEARER_TOKEN=${{ secrets.BEARER_TOKEN }}" >> .env
          echo "OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }}" >> .env
          # echo "GITHUB_USERNAME=${{ secrets.GITHUB_USERNAME }}" >> .env
          # GITHUB_TOKEN genellikle ${{ secrets.GITHUB_TOKEN }} olarak doğrudan kullanılır, .env'e yazmak gerekmeyebilir.
          # Eğer betiğinizin .env'den okuması gerekiyorsa ekleyebilirsiniz:
          # echo "GITHUB_TOKEN=${{ secrets.ACTION_SPECIFIC_GITHUB_TOKEN }}" >> .env # Özel bir token ise
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "SPOTIFY_CLIENT_ID=${{ secrets.SPOTIFY_CLIENT_ID }}" >> .env
          echo "SPOTIFY_CLIENT_SECRET=${{ secrets.SPOTIFY_CLIENT_SECRET }}" >> .env
          echo "SPOTIFY_REFRESH_TOKEN=${{ secrets.SPOTIFY_REFRESH_TOKEN }}" >> .env
          echo "SPOTIFY_USER_ID=${{ secrets.SPOTIFY_USER_ID }}" >> .env
          echo "SPOTIFY_TARGET_PLAYLIST_ID=${{ secrets.SPOTIFY_TARGET_PLAYLIST_ID }}" >> .env
          echo "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" >> .env
          echo "✅ .env dosyası GitHub Secrets kullanılarak oluşturuldu."

      - name: Haber Botu Betiğini Çalıştır 🤖
        run: python main.py

      - name: GitHub Pages artifact'ını yükle
        uses: actions/upload-pages-artifact@v3
        with:
          # './output' klasörünün içeriğini yükle
          path: ./output

  # Sonra deploy (dağıtım) adımı
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # build adımının bitmesini bekle
    steps:
      - name: GitHub Pages'e dağıt
        id: deployment
        uses: actions/deploy-pages@v4